box: node:6.10
build:
  steps:
    # A step that executes `npm install` command
    - npm-install
push:
  steps:
    # Push to public docker repo
    - internal/docker-push:
        username: $DOCKER_USERNAME
        password: $DOCKER_PASSWORD
        tag: $DOCKER_TAG
        repository: $DOCKER_REPOSITORY
        registry: https://index.docker.io/v2/
        cmd: node pipeline/source/app.js
deploy-to-oke:
  box:
        id: alpine
        cmd: /bin/sh
  steps:
    - bash-template
    
    - kubectl:
        name: delete namespace
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: delete namespace $WERCKER_APPLICATION_OWNER_NAME --ignore-not-found=true
        
    - script:
        name: wait to delete namespace
        code: sleep 30
        
    - kubectl:
        name: create namespace    
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create namespace $WERCKER_APPLICATION_OWNER_NAME
        
    - kubectl:
        name: create OCR secret
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create secret docker-registry wrelease --docker-server=wcr.io --docker-username=$WERCKER_APPLICATION_OWNER_NAME --docker-password=$KUBERNETES_TOKEN --docker-email=${WERCKER_APPLICATION_OWNER_NAME}@mail.com --namespace=$WERCKER_APPLICATION_OWNER_NAME
        
    - kubectl:
        name: create deplyoment
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create -f $WERCKER_ROOT/kubernetes-deployment.yml --namespace=$WERCKER_APPLICATION_OWNER_NAME

    - kubectl:
        name: create Ingress configuration
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: create -f $WERCKER_ROOT/ingress.yml --namespace=$WERCKER_APPLICATION_OWNER_NAME

    - kubectl:
        name: get LoadBalancer public IP address
        server: $KUBERNETES_MASTER
        token: $KUBERNETES_TOKEN
        insecure-skip-tls-verify: true
        command: get svc -o jsonpath='{.items[*].status.loadBalancer.ingress[*].ip}' --all-namespaces
